Tree.prototype.__removeObjectChildren = function(o){
    var treeData = this._state;
    var eContainer = this.eTable;
    var candidates = [];
    var stack = [o];
    while (stack.length){
        var parent = stack.pop();
        candidates.push(parent);
        if (parent.children){
            for (var i = 0 ; i < parent.children.length ; i++){
                var child = parent.children[i];
                stack.push(child);
            }
        }
    }
    for (var i = candidates.length - 1 ; i >= 1 ; i--){
        eContainer.removeChild(candidates[i].element);
        delete candidates[i].children;
    }
    delete o.children;
    
    if (!treeData.hasOwnProperty('removed'))
            treeData.removed = [];
    for (var i = candidates.length - 1 ; i >= 1 ; i--){
        var candidateId = candidates[i].id;
        treeData.removed.push(candidateId);
        delete this.__objectMap[candidateId];
        delete this.__objects[candidateId];
    }
    this._registerStateChanges();
};
